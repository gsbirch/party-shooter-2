//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""PlayerControls"",
            ""id"": ""ba233eb1-8a23-4c42-b98b-a46d30f3c3de"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""2411801f-2fba-429a-9296-d8c686b17ba9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""2339c236-c16e-4c96-928c-3be24d8485b8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""b64e7c70-bb55-417d-ae37-859e2a3bae44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryInteract"",
                    ""type"": ""Button"",
                    ""id"": ""c4ad5ad1-319d-4287-9160-69963d827cfb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryInteract"",
                    ""type"": ""Button"",
                    ""id"": ""1e50cc67-5fff-4baa-a1a9-608523305e15"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TertiaryInteract"",
                    ""type"": ""Button"",
                    ""id"": ""1b8bc8de-988e-4e88-91de-aba3f372658e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollInventory"",
                    ""type"": ""Button"",
                    ""id"": ""1d2df85c-f50c-45c8-a4fe-8da3aac95726"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectInventory"",
                    ""type"": ""Button"",
                    ""id"": ""5912d038-448a-49f3-b146-8cfa78b45319"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a753d88a-1026-4e80-89fc-e7adb1f7aea1"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""eb237aeb-34c3-4f76-b503-bc1077692734"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""17ec3da7-891e-4023-9673-c55fa6a3235f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e8ad0f9e-4e33-484b-a421-1850356483da"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0c273a66-4f2d-43fa-b71f-6a0dee4cd478"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""aeda7c97-f5ae-4bec-8370-4e940f448d1b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6bdbfd4c-56fd-4753-a68d-fe9cce10fc3f"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5c20455-0c59-4a4b-9a0e-819279d5d203"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bdc1ac16-8638-462e-bb2a-ade83cdf2a2d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""360b33b9-7154-4d7e-b796-8d8a0ec5d0d8"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2ebded6-29b1-45de-8c35-ed828efb5503"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4cfe79b6-e6d0-4a95-8d43-f9e868428e2b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c4e3432-bfa1-4b20-a36c-d738efcbbe29"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TertiaryInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3d0688f-d5dd-4216-ba6e-add69194c2cf"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TertiaryInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be885190-9932-44e7-afbf-37372d3dea64"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2d4113a-965c-4a4b-bd55-a92b105adc4d"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Wheel"",
                    ""id"": ""5e03f16b-87bf-4cbe-b5d7-46d0735e3fa8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollInventory"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""627f15e7-ebe0-45a8-bb19-a39d4a5cadf7"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""0e9a2f22-80de-4800-ade5-03d03ece782b"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Controller"",
                    ""id"": ""43c8b83e-6aa2-46f9-9dd8-15cc018cdc99"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollInventory"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""7bddef06-adbf-4f02-aea7-7113e0a31d03"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6199c0be-5f56-4a54-b50b-bed68ae48f28"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""24f7327d-f39f-4c3b-bb27-77dd543b1910"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""SelectInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2da12846-cf21-40bd-94a4-a04c161b5ecb"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""SelectInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0589ef7e-6ab8-41f7-98c2-a88b4754f6f7"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""SelectInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6d33419-fc33-4ff3-b906-a285deb896c7"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=4)"",
                    ""groups"": """",
                    ""action"": ""SelectInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b862ddff-1e05-4989-8f2e-4b15f87d9829"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=5)"",
                    ""groups"": """",
                    ""action"": ""SelectInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""658780e9-ffe9-40db-aef5-06924dffa61e"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=6)"",
                    ""groups"": """",
                    ""action"": ""SelectInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f342bb02-8cc9-42f5-ba49-a8743a8b04b9"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=7)"",
                    ""groups"": """",
                    ""action"": ""SelectInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0502f36-bb5e-4d13-831d-3b4817404c85"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=8)"",
                    ""groups"": """",
                    ""action"": ""SelectInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00ff35f4-5744-46f6-b2a1-92233715ee88"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=9)"",
                    ""groups"": """",
                    ""action"": ""SelectInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0ac5262-bcea-491d-8a2c-357a4cdb64e0"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=10)"",
                    ""groups"": """",
                    ""action"": ""SelectInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ExternalControls"",
            ""id"": ""1e99feb8-ad51-446e-8ffc-a2a7a7bc40f4"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""42c28b8e-8f79-43ac-a124-5a512831d0ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fullscreen"",
                    ""type"": ""Button"",
                    ""id"": ""c74a5226-021e-4bbd-921b-cffd45343af5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowDebugMenu"",
                    ""type"": ""Button"",
                    ""id"": ""d68895a4-877c-47e0-a140-bc6b7d4934d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""160b0a21-b1a4-4343-a08b-d7557f862682"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4b8312c-5998-483d-8cac-f40878c50f39"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10d17eb4-640a-4261-aae5-ed71cb23b915"",
                    ""path"": ""<Keyboard>/f11"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fullscreen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""299fa52a-5c73-48c0-b7ae-a907729b3fbf"",
                    ""path"": ""<Keyboard>/backslash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShowDebugMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControls
        m_PlayerControls = asset.FindActionMap("PlayerControls", throwIfNotFound: true);
        m_PlayerControls_Move = m_PlayerControls.FindAction("Move", throwIfNotFound: true);
        m_PlayerControls_Look = m_PlayerControls.FindAction("Look", throwIfNotFound: true);
        m_PlayerControls_Jump = m_PlayerControls.FindAction("Jump", throwIfNotFound: true);
        m_PlayerControls_PrimaryInteract = m_PlayerControls.FindAction("PrimaryInteract", throwIfNotFound: true);
        m_PlayerControls_SecondaryInteract = m_PlayerControls.FindAction("SecondaryInteract", throwIfNotFound: true);
        m_PlayerControls_TertiaryInteract = m_PlayerControls.FindAction("TertiaryInteract", throwIfNotFound: true);
        m_PlayerControls_ScrollInventory = m_PlayerControls.FindAction("ScrollInventory", throwIfNotFound: true);
        m_PlayerControls_SelectInventory = m_PlayerControls.FindAction("SelectInventory", throwIfNotFound: true);
        // ExternalControls
        m_ExternalControls = asset.FindActionMap("ExternalControls", throwIfNotFound: true);
        m_ExternalControls_Pause = m_ExternalControls.FindAction("Pause", throwIfNotFound: true);
        m_ExternalControls_Fullscreen = m_ExternalControls.FindAction("Fullscreen", throwIfNotFound: true);
        m_ExternalControls_ShowDebugMenu = m_ExternalControls.FindAction("ShowDebugMenu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControls
    private readonly InputActionMap m_PlayerControls;
    private List<IPlayerControlsActions> m_PlayerControlsActionsCallbackInterfaces = new List<IPlayerControlsActions>();
    private readonly InputAction m_PlayerControls_Move;
    private readonly InputAction m_PlayerControls_Look;
    private readonly InputAction m_PlayerControls_Jump;
    private readonly InputAction m_PlayerControls_PrimaryInteract;
    private readonly InputAction m_PlayerControls_SecondaryInteract;
    private readonly InputAction m_PlayerControls_TertiaryInteract;
    private readonly InputAction m_PlayerControls_ScrollInventory;
    private readonly InputAction m_PlayerControls_SelectInventory;
    public struct PlayerControlsActions
    {
        private @PlayerActions m_Wrapper;
        public PlayerControlsActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerControls_Move;
        public InputAction @Look => m_Wrapper.m_PlayerControls_Look;
        public InputAction @Jump => m_Wrapper.m_PlayerControls_Jump;
        public InputAction @PrimaryInteract => m_Wrapper.m_PlayerControls_PrimaryInteract;
        public InputAction @SecondaryInteract => m_Wrapper.m_PlayerControls_SecondaryInteract;
        public InputAction @TertiaryInteract => m_Wrapper.m_PlayerControls_TertiaryInteract;
        public InputAction @ScrollInventory => m_Wrapper.m_PlayerControls_ScrollInventory;
        public InputAction @SelectInventory => m_Wrapper.m_PlayerControls_SelectInventory;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @PrimaryInteract.started += instance.OnPrimaryInteract;
            @PrimaryInteract.performed += instance.OnPrimaryInteract;
            @PrimaryInteract.canceled += instance.OnPrimaryInteract;
            @SecondaryInteract.started += instance.OnSecondaryInteract;
            @SecondaryInteract.performed += instance.OnSecondaryInteract;
            @SecondaryInteract.canceled += instance.OnSecondaryInteract;
            @TertiaryInteract.started += instance.OnTertiaryInteract;
            @TertiaryInteract.performed += instance.OnTertiaryInteract;
            @TertiaryInteract.canceled += instance.OnTertiaryInteract;
            @ScrollInventory.started += instance.OnScrollInventory;
            @ScrollInventory.performed += instance.OnScrollInventory;
            @ScrollInventory.canceled += instance.OnScrollInventory;
            @SelectInventory.started += instance.OnSelectInventory;
            @SelectInventory.performed += instance.OnSelectInventory;
            @SelectInventory.canceled += instance.OnSelectInventory;
        }

        private void UnregisterCallbacks(IPlayerControlsActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @PrimaryInteract.started -= instance.OnPrimaryInteract;
            @PrimaryInteract.performed -= instance.OnPrimaryInteract;
            @PrimaryInteract.canceled -= instance.OnPrimaryInteract;
            @SecondaryInteract.started -= instance.OnSecondaryInteract;
            @SecondaryInteract.performed -= instance.OnSecondaryInteract;
            @SecondaryInteract.canceled -= instance.OnSecondaryInteract;
            @TertiaryInteract.started -= instance.OnTertiaryInteract;
            @TertiaryInteract.performed -= instance.OnTertiaryInteract;
            @TertiaryInteract.canceled -= instance.OnTertiaryInteract;
            @ScrollInventory.started -= instance.OnScrollInventory;
            @ScrollInventory.performed -= instance.OnScrollInventory;
            @ScrollInventory.canceled -= instance.OnScrollInventory;
            @SelectInventory.started -= instance.OnSelectInventory;
            @SelectInventory.performed -= instance.OnSelectInventory;
            @SelectInventory.canceled -= instance.OnSelectInventory;
        }

        public void RemoveCallbacks(IPlayerControlsActions instance)
        {
            if (m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerControlsActions @PlayerControls => new PlayerControlsActions(this);

    // ExternalControls
    private readonly InputActionMap m_ExternalControls;
    private List<IExternalControlsActions> m_ExternalControlsActionsCallbackInterfaces = new List<IExternalControlsActions>();
    private readonly InputAction m_ExternalControls_Pause;
    private readonly InputAction m_ExternalControls_Fullscreen;
    private readonly InputAction m_ExternalControls_ShowDebugMenu;
    public struct ExternalControlsActions
    {
        private @PlayerActions m_Wrapper;
        public ExternalControlsActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_ExternalControls_Pause;
        public InputAction @Fullscreen => m_Wrapper.m_ExternalControls_Fullscreen;
        public InputAction @ShowDebugMenu => m_Wrapper.m_ExternalControls_ShowDebugMenu;
        public InputActionMap Get() { return m_Wrapper.m_ExternalControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ExternalControlsActions set) { return set.Get(); }
        public void AddCallbacks(IExternalControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_ExternalControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ExternalControlsActionsCallbackInterfaces.Add(instance);
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @Fullscreen.started += instance.OnFullscreen;
            @Fullscreen.performed += instance.OnFullscreen;
            @Fullscreen.canceled += instance.OnFullscreen;
            @ShowDebugMenu.started += instance.OnShowDebugMenu;
            @ShowDebugMenu.performed += instance.OnShowDebugMenu;
            @ShowDebugMenu.canceled += instance.OnShowDebugMenu;
        }

        private void UnregisterCallbacks(IExternalControlsActions instance)
        {
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @Fullscreen.started -= instance.OnFullscreen;
            @Fullscreen.performed -= instance.OnFullscreen;
            @Fullscreen.canceled -= instance.OnFullscreen;
            @ShowDebugMenu.started -= instance.OnShowDebugMenu;
            @ShowDebugMenu.performed -= instance.OnShowDebugMenu;
            @ShowDebugMenu.canceled -= instance.OnShowDebugMenu;
        }

        public void RemoveCallbacks(IExternalControlsActions instance)
        {
            if (m_Wrapper.m_ExternalControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IExternalControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_ExternalControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ExternalControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ExternalControlsActions @ExternalControls => new ExternalControlsActions(this);
    public interface IPlayerControlsActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnPrimaryInteract(InputAction.CallbackContext context);
        void OnSecondaryInteract(InputAction.CallbackContext context);
        void OnTertiaryInteract(InputAction.CallbackContext context);
        void OnScrollInventory(InputAction.CallbackContext context);
        void OnSelectInventory(InputAction.CallbackContext context);
    }
    public interface IExternalControlsActions
    {
        void OnPause(InputAction.CallbackContext context);
        void OnFullscreen(InputAction.CallbackContext context);
        void OnShowDebugMenu(InputAction.CallbackContext context);
    }
}
